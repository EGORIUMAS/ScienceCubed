from pyrogram import Client, filters
from database.db import Team, Question
from config import DATABASE_URL
from database.db import init_db
Session = init_db(DATABASE_URL)
from utils.rate_limiter import RateLimiter
import json


#@RateLimiter(seconds=5)
async def help_command(client, message):
    help_text = """
ü§ñ –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:

üìù –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è:
/start - –ù–∞—á–∞—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∫–æ–º–∞–Ω–¥—ã
/join_team - –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∫–æ–º–∞–Ω–¥–µ

‚ùì –í–∏–∫—Ç–æ—Ä–∏–Ω–∞:
/status - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å —Ç–µ–∫—É—â–µ–π –∏–≥—Ä—ã
/leaderboard - –¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤

‚ÑπÔ∏è –ü—Ä–æ—á–µ–µ:
/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
/rules - –ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã
"""
    await message.reply(help_text)


#@RateLimiter(seconds=5)
async def rules_command(client, message):
    rules_text = """
üìú –ü—Ä–∞–≤–∏–ª–∞ –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã:

1Ô∏è‚É£ –†–∞—É–Ω–¥ 1: –ü—Ä–∞–≤–¥–∞/–õ–æ–∂—å
- –ü—Ä–æ—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ "–ü—Ä–∞–≤–¥–∞" –∏–ª–∏ "–õ–æ–∂—å"
- –í—Ä–µ–º—è –Ω–∞ –æ—Ç–≤–µ—Ç: 30 —Å–µ–∫—É–Ω–¥
- 1 –±–∞–ª–ª –∑–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç

2Ô∏è‚É£ –†–∞—É–Ω–¥ 2: –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –≤—ã–±–æ—Ä
- –í–æ–ø—Ä–æ—Å—ã —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ A, B, C, D
- –í—Ä–µ–º—è –Ω–∞ –æ—Ç–≤–µ—Ç: 45 —Å–µ–∫—É–Ω–¥
- 2 –±–∞–ª–ª–∞ –∑–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç

3Ô∏è‚É£ –†–∞—É–Ω–¥ 3: –¢–µ–∫—Å—Ç–æ–≤—ã–µ –æ—Ç–≤–µ—Ç—ã
- –ù—É–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç —Ç–µ–∫—Å—Ç–æ–º
- –í—Ä–µ–º—è –Ω–∞ –æ—Ç–≤–µ—Ç: 60 —Å–µ–∫—É–Ω–¥
- 3 –±–∞–ª–ª–∞ –∑–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç

‚ö†Ô∏è –û–±—â–∏–µ –ø—Ä–∞–≤–∏–ª–∞:
- –û–¥–∏–Ω –æ—Ç–≤–µ—Ç –æ—Ç –∫–æ–º–∞–Ω–¥—ã –Ω–∞ –∫–∞–∂–¥—ã–π –≤–æ–ø—Ä–æ—Å
- –ü–æ—Å–ª–µ –∏—Å—Ç–µ—á–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç–≤–µ—Ç—ã –Ω–µ –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è
- –ó–∞–ø—Ä–µ—â–µ–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å—Ç–æ—Ä–æ–Ω–Ω–∏—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
"""
    await message.reply(rules_text)


#@RateLimiter(seconds=5)
async def status_command(client, message):
    session = Session()
    try:
        team = session.query(Team).filter_by(leader_id=message.from_user.id).first()
        if not team:
            await message.reply("–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ –∏–≥—Ä–µ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.")
            return

        current_question = session.query(Question).order_by(Question.id.desc()).first()

        status_text = f"""
üìä –°—Ç–∞—Ç—É—Å –∏–≥—Ä—ã:

üë• –í–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞: {team.name}
üéØ –¢–µ–∫—É—â–∏–π —Å—á–µ—Ç: {team.score or 0} –æ—á–∫–æ–≤
üë• –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –∫–æ–º–∞–Ω–¥–µ: {len(json.loads(team.players))}

"""
        if current_question:
            status_text += f"‚ùì –¢–µ–∫—É—â–∏–π —Ä–∞—É–Ω–¥: {current_question.round_number}\n"

        await message.reply(status_text)
    finally:
        session.close()


#@RateLimiter(seconds=5)
async def leaderboard_command(client, message):
    session = Session()
    try:
        teams = session.query(Team).order_by(Team.score.desc()).all()

        if not teams:
            await message.reply("–ü–æ–∫–∞ –Ω–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.")
            return

        leaderboard_text = "üèÜ –¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤:\n\n"
        for i, team in enumerate(teams, 1):
            leaderboard_text += f"{i}. {team.name}: {team.score or 0} –æ—á–∫–æ–≤\n"

        await message.reply(leaderboard_text)
    finally:
        session.close()